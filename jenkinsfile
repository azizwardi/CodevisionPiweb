pipeline {
    agent any

    environment {
        PATH = "${WORKSPACE}/Backend/node_modules/.bin:${env.PATH}"
    }

    stages {
        stage('Install Dependencies') {
            steps {
                dir('Backend') {
                    sh 'npm install'
                }
            }
        }

        stage('Fix Permissions') {
            steps {
                dir('Backend') {
                    sh 'chmod +x node_modules/.bin/nodemon'
                    sh 'chmod +x node_modules/.bin/webpack' // üî• Correction pour Webpack
                }
            }
        }

        stage('Unit Test') {
            steps {
                dir('Backend') {
                    script {
                        sh 'echo "No tests specified"'
                    }
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv('scanner') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Start Dev Server') {
            steps {
                dir('Backend') {
                    script {
                        sh 'npm run build-dev'
                    }
                }
            }
        }

        stage('Docker Setup & Build') {
            steps {
                script {
                    sh 'docker info' // üîç V√©rifie si Docker est bien install√© et accessible
                    sh 'ls -l docker-compose.yml || echo "‚ö†Ô∏è  docker-compose.yml introuvable!"' // üî• V√©rifie l'existence du fichier
                    sh 'docker-compose build'
                }
            }
        }
    }

    post {
        failure {
            echo '‚ùå Pipeline failed. Check logs.'
        }
        success {
            echo '‚úÖ Pipeline succeeded!'
        }
    }
}
