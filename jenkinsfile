pipeline {
    agent any

    environment {
        // Ajouter le chemin de node_modules/.bin au PATH
        PATH = "${WORKSPACE}/Backend/node_modules/.bin:${env.PATH}"
    }

    stages {
        // Étape 1 : Installation des dépendances
        stage('Install Dependencies') {
            steps {
                dir('Backend') {
                    sh 'npm install'
                }
            }
        }

        // Étape 2 : Vérification et correction des permissions de nodemon
        stage('Fix Nodemon Permissions') {
            steps {
                dir('Backend') {
                    sh 'chmod +x node_modules/.bin/nodemon' // Donne les permissions d'exécution à nodemon
                }
            }
        }

        // Étape 3 : Tests unitaires (simulés ici)
        stage('Unit Test') {
            steps {
                dir('Backend') {
                    script {
                        sh 'echo "No tests specified"'
                    }
                }
            }
        }

        // Étape 4 : Analyse SonarQube
        stage('SonarQube Analysis') {
            steps {
                script {
                    // Utiliser l'outil SonarQube Scanner configuré dans Jenkins
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv('scanner') { // Remplacez 'scanner' par le nom de votre configuration SonarQube dans Jenkins
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }

        // Étape 5 : Démarrer le serveur avec Nodemon (mode dev)
        stage('Start Dev Server') {
            steps {
                dir('Backend') {
                    script {
                        sh 'npm run dev' // Démarrer le serveur en mode développement
                    }
                }
            }
        }
    }

    // Gestion des erreurs
    post {
        failure {
            echo 'Pipeline has failed. Check the logs for more details.'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
