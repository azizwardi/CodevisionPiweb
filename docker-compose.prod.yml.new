version: '3.8'
services:
  db:
    image: mongo:4.2
    container_name: db-54
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27021:27017"
    volumes:
      - mongo-data-54:/data/db
    networks:
      - app-network-54

  backend:
    image: 192.168.33.10:8083/piwebapp-backend:54
    container_name: backend-54
    restart: on-failure:3
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://root:example@db-54:27017/codevisionpiweb?authSource=admin
      - JWT_SECRET=development_jwt_secret_replace_in_production
      - PORT=5000
      - DEBUG=express:*
    ports:
      - "5004:5000"
    networks:
      - app-network-54
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    # Simplified command to avoid interpolation issues
    command: >
      sh -c '
        echo "Waiting for MongoDB to be ready..." &&
        sleep 15 &&
        echo "Starting backend application..." &&
        node server.js
      '

  frontend:
    image: 192.168.33.10:8083/piwebapp-frontend:54
    container_name: frontend-54
    restart: always
    depends_on:
      - backend
    ports:
      - "8004:80"
    networks:
      - app-network-54

networks:
  app-network-54:
    driver: bridge

volumes:
  mongo-data-54:
