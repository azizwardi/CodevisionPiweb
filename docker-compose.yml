version: '3.8'
services:
  # Database
  db:
    image: mongo:4.2
    container_name: db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Backend
  backend:
    image: 192.168.33.10:8083/piwebapp:6.0
    container_name: back
    restart: always
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://root:example@db:27017/codevisionpiweb?authSource=admin
      - JWT_SECRET=your_jwt_secret_here
      - PORT=5000
    ports:
      - "5000:5000"
    networks:
      - app-network

  # Frontend
  frontend:
    image: 192.168.33.10:8083/piwebapp-frontend:latest
    container_name: frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app-network

  # Node exporter for system metrics
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  grafana-data:
